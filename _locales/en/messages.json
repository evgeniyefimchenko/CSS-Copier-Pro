{
  "extName": { "message": "CSS Copier Pro" },
  "extDescription": { "message": "Selects an element on the page, copies its CSS styles and its children's styles, with a configurable property filter." },
  "selectElementBtnPopup": { "message": "Select Element" },
  "settingsBtnPopup": { "message": "Settings" },
  "documentationLinkText": { "message": "Documentation" },
  "copiedToClipboardMsg": { "message": "CSS styles copied to clipboard!" },
  "errorCopiedToClipboardMsg": { "message": "Error copying styles." },
  "selectionCancelledMsg": { "message": "Element selection cancelled." },
  "optionsTitle": { "message": "CSS Copier Pro Options" },
  "usefulPropsListLabel": { "message": "`usefulProps` list (one property per line):" },
  "enableUsefulPropsLabel": { "message": "Enable `usefulProps` list filtering" },
  "usefulPropsTooltip": { "message": "If enabled, only properties from this list that differ from parent or default values will be copied. If disabled, all properties differing from parent or default values will be copied." },
  "saveSettingsBtn": { "message": "Save Settings" },
  "restoreDefaultsBtn": { "message": "Restore Defaults" },
  "clickSavePrompt": {"message": "Click 'Save Settings'."},
  "statusSettingsSaved": { "message": "Settings saved." },
  "statusSettingsRestored": { "message": "Default settings restored." },
  "contextMenuParent": { "message": "CSS Copier Pro" },
  "contextMenuSelectElement": { "message": "Select Element" },
  "contextMenuOpenSettings": { "message": "Settings" },
  "documentationPageTitle": { "message": "CSS Copier Pro Documentation" },
  "documentationIntro": { "message": "Welcome! This guide will help you use the 'CSS Copier Pro' extension to efficiently copy CSS styles." },
  "documentationUsageHeading": { "message": "How to Use" },
  "docUsageStep1": { "message": "1. Activate element selection mode using one of the following methods:" },
  "docUsageStep1_OptA": { "message": "Click the extension icon in the browser toolbar, then click the 'Select Element' button." },
  "docUsageStep1_OptB": { "message": "Right-click on the page and choose 'CSS Copier Pro' -> 'Select Element' from the context menu." },
  "docUsageStep1_OptC": { "message": "Use the keyboard shortcut (default: Ctrl+Shift+S or Command+Shift+S for Mac)." },
  "docUsageStep2": { "message": "2. Once activated, your cursor will change. Click on the desired element on the webpage. Elements will be highlighted on hover." },
  "docUsageStep3": { "message": "3. The CSS styles of the selected element and its children will be copied to your clipboard. You will see a notification in the center of the screen." },
  "docUsageStep4": { "message": "4. Press Esc if you want to cancel the element selection mode before clicking." },
  "documentationOptionsHeading": { "message": "Options Page" },
  "docOptionsDesc": { "message": "To access settings, click the extension icon -> 'Settings', or via the context menu -> 'Settings'. The options page allows you to:" },
  "docOptionsLi1": { "message": "Customize the list of CSS properties to extract (`usefulProps`). Each property should be on a new line. This list is used if the filtering option is enabled." },
  "docOptionsLi2": { "message": "Enable or disable the `usefulProps` list filtering. If filtering is disabled, the extension will attempt to copy all computed styles that differ from parent element styles and are not basic default values." },
  "docOutputHeading": { "message": "Understanding the Output" },
  "docOutputDesc1": { "message": "Selectors are generated based on ID, classes, or tag type and its position. For child elements, a path from the parent is constructed." },
  "docOutputDesc2": { "message": "The extension uses `window.getComputedStyle()`, which returns the final, computed values of properties. This means you will see expanded (longhand) properties (e.g., `border-top-width` instead of `border`). The plugin logic attempts to use shorthands where possible if they are specified in `usefulProps`." },
  "docOutputDesc3": { "message": "The `usefulProps` filter and internal checks help remove 'noise' â€“ default browser values, styles inherited without change, etc." },
  "docOutputDesc4": { "message": "Styles for pseudo-elements (`:before` and `:after`) are compared against the styles of their originating element." },
  "docTroubleshootingHeading": { "message": "Troubleshooting" },
  "docTrouble1Prob": { "message": "The copied CSS is too verbose or includes many 'junk' styles." },
  "docTrouble1Sol": { "message": "Ensure the 'Enable `usefulProps` list filtering' option is checked on the Options page. Try editing the `usefulProps` list to include only the most essential properties, or restore the default settings. A shorter, more precise `usefulProps` list significantly improves the result." },
  "docTrouble2Prob": { "message": "The extension doesn't work / element selection mode doesn't activate." },
  "docTrouble2Sol": { "message": "Ensure the page has fully loaded. Try refreshing the page. Reload the extension from the `chrome://extensions/` page. Check the developer console for errors." },
  "docShortcutHeading": { "message": "Keyboard Shortcut" },
  "docShortcutDesc": { "message": "By default, use Ctrl+Shift+S (or Command+Shift+S on Mac) to activate. You can change this shortcut on the `chrome://extensions/shortcuts` page." }
}